"""Change worker

Revision ID: e9c082ee8c26
Revises: 99be43e36c2c
Create Date: 2021-05-17 19:47:50.661437+00:00

"""
import sqlalchemy as sa
import sqlalchemy_utils

from alembic import op


# revision identifiers, used by Alembic.
revision = "e9c082ee8c26"
down_revision = "99be43e36c2c"
branch_labels = None
depends_on = None


worker_skill = sa.Enum(
    "no_repair", "simple_repair", "electrical_repair", name="worker_skill"
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("reports_worker_id_fkey", "reports")
    op.drop_constraint("task_messages_worker_id_fkey", "task_messages")
    op.drop_constraint("tasks_worker_id_fkey", "tasks")
    op.drop_constraint("workers_pkey", "workers")
    op.alter_column("workers", "id", existing_nullable=False, nullable=True)
    op.create_unique_constraint("workers_id_key", "workers", ["id"])
    op.create_foreign_key(
        "reports_worker_id_fkey", "reports", "workers", ["worker_id"], ["id"]
    )
    op.create_foreign_key(
        "task_messages_worker_id_fkey",
        "task_messages",
        "workers",
        ["worker_id"],
        ["id"],
    )
    op.create_foreign_key(
        "tasks_worker_id_fkey", "tasks", "workers", ["worker_id"], ["id"]
    )
    op.add_column(
        "workers",
        sa.Column(
            "phone", sqlalchemy_utils.types.phone_number.PhoneNumberType(region="RU")
        ),
    )
    op.create_primary_key("workers_pkey", "workers", ["phone"])
    worker_skill.create(op.get_bind())
    op.alter_column(
        "workers",
        "skill",
        existing_type=sa.NUMERIC(precision=1, scale=0),
        type_=worker_skill,
        postgresql_using="(enum_range(null::worker_skill))[skill::int + 1]",
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "workers",
        "skill",
        existing_type=worker_skill,
        type_=sa.NUMERIC(precision=1, scale=0),
        postgresql_using="array_length(enum_range(NULL, skill::worker_skill), 1)",
        nullable=True,
    )
    op.drop_column("workers", "phone")
    op.drop_constraint("reports_worker_id_fkey", "reports")
    op.drop_constraint("task_messages_worker_id_fkey", "task_messages")
    op.drop_constraint("tasks_worker_id_fkey", "tasks")
    op.drop_constraint("workers_id_key", "workers")
    op.alter_column("workers", "id", existing_nullable=True, nullable=False)
    op.create_primary_key("workers_pkey", "workers", ["id"])
    op.create_foreign_key(
        "reports_worker_id_fkey", "reports", "workers", ["worker_id"], ["id"]
    )
    op.create_foreign_key(
        "task_messages_worker_id_fkey",
        "task_messages",
        "workers",
        ["worker_id"],
        ["id"],
    )
    op.create_foreign_key(
        "tasks_worker_id_fkey", "tasks", "workers", ["worker_id"], ["id"]
    )
    worker_skill.drop(op.get_bind())
    # ### end Alembic commands ###
